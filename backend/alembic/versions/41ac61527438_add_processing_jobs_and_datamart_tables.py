"""add_processing_jobs_and_datamart_tables

Revision ID: 41ac61527438
Revises: 10b28921b31b
Create Date: 2025-09-16 04:51:01.114950

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel  # Always import sqlmodel for SQLModel types


# revision identifiers, used by Alembic.
revision: str = '41ac61527438'
down_revision: Union[str, Sequence[str], None] = '10b28921b31b'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('datamart_epidemiologia',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_evento_caso', sa.BigInteger(), nullable=False),
    sa.Column('codigo_ciudadano', sa.BigInteger(), nullable=False),
    sa.Column('id_evento', sa.Integer(), nullable=True),
    sa.Column('dni_ciudadano', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('nombre_completo', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('fecha_nacimiento', sa.Date(), nullable=True),
    sa.Column('sexo', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('id_localidad_indec', sa.Integer(), nullable=True),
    sa.Column('nombre_localidad', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('nombre_departamento', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('region_sanitaria', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('nombre_evento', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('grupo_evento', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('fecha_inicio_sintomas', sa.Date(), nullable=True),
    sa.Column('fecha_apertura_caso', sa.Date(), nullable=True),
    sa.Column('semana_epidemiologica_apertura', sa.Integer(), nullable=True),
    sa.Column('anio_epidemiologico_apertura', sa.Integer(), nullable=True),
    sa.Column('anio_evento', sa.Integer(), nullable=True),
    sa.Column('clasificacion_resumen', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('es_caso_sintomatico', sa.Boolean(), nullable=True),
    sa.Column('cantidad_sintomas', sa.Integer(), nullable=True),
    sa.Column('sintomas_principales', sa.Text(), nullable=True),
    sa.Column('cantidad_muestras', sa.Integer(), nullable=True),
    sa.Column('resultado_final', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('fecha_resultado', sa.Date(), nullable=True),
    sa.Column('fue_internado', sa.Boolean(), nullable=True),
    sa.Column('dias_internacion', sa.Integer(), nullable=True),
    sa.Column('requirio_uti', sa.Boolean(), nullable=True),
    sa.Column('evolucion_final', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('fecha_alta', sa.Date(), nullable=True),
    sa.Column('ultima_actualizacion_datamart', sa.DateTime(), nullable=False),
    sa.Column('hash_cambios', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_datamart_clasificacion', 'datamart_epidemiologia', ['clasificacion_resumen'], unique=False)
    op.create_index('idx_datamart_evento_fecha', 'datamart_epidemiologia', ['id_evento', 'fecha_inicio_sintomas'], unique=False)
    op.create_index('idx_datamart_fecha_evento', 'datamart_epidemiologia', ['fecha_inicio_sintomas', 'anio_evento'], unique=False)
    op.create_index('idx_datamart_localidad_fecha', 'datamart_epidemiologia', ['id_localidad_indec', 'fecha_inicio_sintomas'], unique=False)
    op.create_index('idx_datamart_semana_epi', 'datamart_epidemiologia', ['anio_epidemiologico_apertura', 'semana_epidemiologica_apertura'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_anio_evento'), 'datamart_epidemiologia', ['anio_evento'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_clasificacion_resumen'), 'datamart_epidemiologia', ['clasificacion_resumen'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_codigo_ciudadano'), 'datamart_epidemiologia', ['codigo_ciudadano'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_dni_ciudadano'), 'datamart_epidemiologia', ['dni_ciudadano'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_evolucion_final'), 'datamart_epidemiologia', ['evolucion_final'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_fecha_apertura_caso'), 'datamart_epidemiologia', ['fecha_apertura_caso'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_fecha_inicio_sintomas'), 'datamart_epidemiologia', ['fecha_inicio_sintomas'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_fue_internado'), 'datamart_epidemiologia', ['fue_internado'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_grupo_evento'), 'datamart_epidemiologia', ['grupo_evento'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_id_evento'), 'datamart_epidemiologia', ['id_evento'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_id_evento_caso'), 'datamart_epidemiologia', ['id_evento_caso'], unique=True)
    op.create_index(op.f('ix_datamart_epidemiologia_id_localidad_indec'), 'datamart_epidemiologia', ['id_localidad_indec'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_region_sanitaria'), 'datamart_epidemiologia', ['region_sanitaria'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_resultado_final'), 'datamart_epidemiologia', ['resultado_final'], unique=False)
    op.create_table('processing_jobs',
    sa.Column('id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('job_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'IN_PROGRESS', 'COMPLETED', 'FAILED', 'CANCELLED', name='jobstatus'), nullable=False),
    sa.Column('priority', sa.Enum('LOW', 'NORMAL', 'HIGH', 'URGENT', name='jobpriority'), nullable=False),
    sa.Column('progress_percentage', sa.Integer(), nullable=False),
    sa.Column('current_step', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('total_steps', sa.Integer(), nullable=False),
    sa.Column('completed_steps', sa.Integer(), nullable=False),
    sa.Column('original_filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('file_path', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('file_size', sa.Integer(), nullable=True),
    sa.Column('sheet_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('total_rows', sa.Integer(), nullable=True),
    sa.Column('columns', sa.JSON(), nullable=True),
    sa.Column('validation_errors', sa.JSON(), nullable=True),
    sa.Column('job_metadata', sa.JSON(), nullable=True),
    sa.Column('error_message', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('error_traceback', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('celery_task_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_by', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('processing_jobs')
    op.drop_index(op.f('ix_datamart_epidemiologia_resultado_final'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_region_sanitaria'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_id_localidad_indec'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_id_evento_caso'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_id_evento'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_grupo_evento'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_fue_internado'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_fecha_inicio_sintomas'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_fecha_apertura_caso'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_evolucion_final'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_dni_ciudadano'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_codigo_ciudadano'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_clasificacion_resumen'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_anio_evento'), table_name='datamart_epidemiologia')
    op.drop_index('idx_datamart_semana_epi', table_name='datamart_epidemiologia')
    op.drop_index('idx_datamart_localidad_fecha', table_name='datamart_epidemiologia')
    op.drop_index('idx_datamart_fecha_evento', table_name='datamart_epidemiologia')
    op.drop_index('idx_datamart_evento_fecha', table_name='datamart_epidemiologia')
    op.drop_index('idx_datamart_clasificacion', table_name='datamart_epidemiologia')
    op.drop_table('datamart_epidemiologia')
    # ### end Alembic commands ###

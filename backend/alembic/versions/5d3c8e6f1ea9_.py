"""

Revision ID: 5d3c8e6f1ea9
Revises: 
Create Date: 2025-08-14 14:05:58.429758

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '5d3c8e6f1ea9'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('antecedente_epidemiologico',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_snvs_antecedente_epidemio', sa.Integer(), nullable=True),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ciudadano',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('codigo_ciudadano', sa.BigInteger(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('apellido', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('tipo_documento', sa.Enum('DNI', 'LIBRETA_CIVICA', 'LIBRETA_ENROLAMIENTO', 'CEDULA_IDENTIDAD', 'PASAPORTE', name='tipodocumento'), nullable=True),
    sa.Column('numero_documento', sa.BigInteger(), nullable=True),
    sa.Column('fecha_nacimiento', sa.Date(), nullable=True),
    sa.Column('sexo_biologico_al_nacer', sa.Enum('MASCULINO', 'FEMENINO', 'NO_ESPECIFICADO', name='sexobiologico'), nullable=True),
    sa.Column('sexo_biologico', sa.Enum('MASCULINO', 'FEMENINO', 'NO_ESPECIFICADO', name='sexobiologico'), nullable=True),
    sa.Column('genero_autopercibido', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('etnia', sqlmodel.sql.sqltypes.AutoString(length=30), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('codigo_ciudadano', name='uk_ciudadano_codigo'),
    sa.UniqueConstraint('tipo_documento', 'numero_documento', name='uk_ciudadano_documento')
    )
    op.create_index(op.f('ix_ciudadano_apellido'), 'ciudadano', ['apellido'], unique=False)
    op.create_index(op.f('ix_ciudadano_codigo_ciudadano'), 'ciudadano', ['codigo_ciudadano'], unique=True)
    op.create_index(op.f('ix_ciudadano_nombre'), 'ciudadano', ['nombre'], unique=False)
    op.create_index(op.f('ix_ciudadano_numero_documento'), 'ciudadano', ['numero_documento'], unique=False)
    op.create_index(op.f('ix_ciudadano_tipo_documento'), 'ciudadano', ['tipo_documento'], unique=False)
    op.create_table('comorbilidad',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('datamart_epidemiologia',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_evento_caso', sa.BigInteger(), nullable=False),
    sa.Column('codigo_ciudadano', sa.BigInteger(), nullable=False),
    sa.Column('id_evento', sa.Integer(), nullable=True),
    sa.Column('dni_ciudadano', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('nombre_completo', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('fecha_nacimiento', sa.Date(), nullable=True),
    sa.Column('sexo', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('id_localidad_indec', sa.Integer(), nullable=True),
    sa.Column('nombre_localidad', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('nombre_departamento', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('region_sanitaria', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('nombre_evento', sqlmodel.sql.sqltypes.AutoString(length=200), nullable=True),
    sa.Column('grupo_evento', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('fecha_inicio_sintomas', sa.Date(), nullable=True),
    sa.Column('fecha_apertura_caso', sa.Date(), nullable=True),
    sa.Column('semana_epidemiologica_apertura', sa.Integer(), nullable=True),
    sa.Column('anio_epidemiologico_apertura', sa.Integer(), nullable=True),
    sa.Column('anio_evento', sa.Integer(), nullable=True),
    sa.Column('clasificacion_resumen', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('es_caso_sintomatico', sa.Boolean(), nullable=True),
    sa.Column('cantidad_sintomas', sa.Integer(), nullable=True),
    sa.Column('sintomas_principales', sa.Text(), nullable=True),
    sa.Column('cantidad_muestras', sa.Integer(), nullable=True),
    sa.Column('resultado_final', sqlmodel.sql.sqltypes.AutoString(length=100), nullable=True),
    sa.Column('fecha_resultado', sa.Date(), nullable=True),
    sa.Column('fue_internado', sa.Boolean(), nullable=True),
    sa.Column('dias_internacion', sa.Integer(), nullable=True),
    sa.Column('requirio_uti', sa.Boolean(), nullable=True),
    sa.Column('evolucion_final', sqlmodel.sql.sqltypes.AutoString(length=50), nullable=True),
    sa.Column('fecha_alta', sa.Date(), nullable=True),
    sa.Column('ultima_actualizacion_datamart', sa.DateTime(), nullable=False),
    sa.Column('hash_cambios', sqlmodel.sql.sqltypes.AutoString(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('idx_datamart_clasificacion', 'datamart_epidemiologia', ['clasificacion_resumen'], unique=False)
    op.create_index('idx_datamart_evento_fecha', 'datamart_epidemiologia', ['id_evento', 'fecha_inicio_sintomas'], unique=False)
    op.create_index('idx_datamart_fecha_evento', 'datamart_epidemiologia', ['fecha_inicio_sintomas', 'anio_evento'], unique=False)
    op.create_index('idx_datamart_localidad_fecha', 'datamart_epidemiologia', ['id_localidad_indec', 'fecha_inicio_sintomas'], unique=False)
    op.create_index('idx_datamart_semana_epi', 'datamart_epidemiologia', ['anio_epidemiologico_apertura', 'semana_epidemiologica_apertura'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_anio_evento'), 'datamart_epidemiologia', ['anio_evento'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_clasificacion_resumen'), 'datamart_epidemiologia', ['clasificacion_resumen'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_codigo_ciudadano'), 'datamart_epidemiologia', ['codigo_ciudadano'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_dni_ciudadano'), 'datamart_epidemiologia', ['dni_ciudadano'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_evolucion_final'), 'datamart_epidemiologia', ['evolucion_final'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_fecha_apertura_caso'), 'datamart_epidemiologia', ['fecha_apertura_caso'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_fecha_inicio_sintomas'), 'datamart_epidemiologia', ['fecha_inicio_sintomas'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_fue_internado'), 'datamart_epidemiologia', ['fue_internado'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_grupo_evento'), 'datamart_epidemiologia', ['grupo_evento'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_id_evento'), 'datamart_epidemiologia', ['id_evento'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_id_evento_caso'), 'datamart_epidemiologia', ['id_evento_caso'], unique=True)
    op.create_index(op.f('ix_datamart_epidemiologia_id_localidad_indec'), 'datamart_epidemiologia', ['id_localidad_indec'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_region_sanitaria'), 'datamart_epidemiologia', ['region_sanitaria'], unique=False)
    op.create_index(op.f('ix_datamart_epidemiologia_resultado_final'), 'datamart_epidemiologia', ['resultado_final'], unique=False)
    op.create_table('evento',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('grupo_evento', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('muestra',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('provincia',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_provincia_indec', sa.Integer(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('poblacion', sa.Integer(), nullable=True),
    sa.Column('superficie_km2', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_provincia_id_provincia_indec'), 'provincia', ['id_provincia_indec'], unique=True)
    op.create_index(op.f('ix_provincia_nombre'), 'provincia', ['nombre'], unique=False)
    op.create_table('sintoma',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_snvs_signo_sintoma', sa.Integer(), nullable=False),
    sa.Column('signo_sintoma', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_sintoma_id_snvs_signo_sintoma'), 'sintoma', ['id_snvs_signo_sintoma'], unique=True)
    op.create_table('vacuna',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ciudadano_comorbilidades',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('codigo_ciudadano', sa.BigInteger(), nullable=False),
    sa.Column('id_comorbilidad', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['codigo_ciudadano'], ['ciudadano.codigo_ciudadano'], ),
    sa.ForeignKeyConstraint(['id_comorbilidad'], ['comorbilidad.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ciudadano_datos',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('codigo_ciudadano', sa.BigInteger(), nullable=False),
    sa.Column('cobertura_social_obra_social', sqlmodel.sql.sqltypes.AutoString(length=250), nullable=True),
    sa.Column('edad_anos_actual', sa.Integer(), nullable=True),
    sa.Column('ocupacion_laboral', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('informacion_contacto', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('es_declarado_pueblo_indigena', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['codigo_ciudadano'], ['ciudadano.codigo_ciudadano'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ciudadano_evento',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_evento_caso', sa.BigInteger(), nullable=False),
    sa.Column('fecha_minima_evento', sa.Date(), nullable=False),
    sa.Column('fecha_inicio_sintomas', sa.Date(), nullable=True),
    sa.Column('es_caso_sintomatico', sa.Boolean(), nullable=True),
    sa.Column('fecha_apertura_caso', sa.Date(), nullable=True),
    sa.Column('semana_epidemiologica_apertura', sa.Integer(), nullable=True),
    sa.Column('anio_epidemiologico_apertura', sa.Integer(), nullable=True),
    sa.Column('edad_anos_al_momento_apertura', sa.Integer(), nullable=True),
    sa.Column('fecha_primera_consulta', sa.Date(), nullable=True),
    sa.Column('anio_epidemiologico_consulta', sa.Integer(), nullable=True),
    sa.Column('semana_epidemiologica_consulta', sa.Integer(), nullable=True),
    sa.Column('semana_minima_calculada', sa.Integer(), nullable=True),
    sa.Column('anio_evento', sa.Integer(), nullable=True),
    sa.Column('observaciones_texto', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id_evento', sa.Integer(), nullable=False),
    sa.Column('codigo_ciudadano', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['codigo_ciudadano'], ['ciudadano.codigo_ciudadano'], ),
    sa.ForeignKeyConstraint(['id_evento'], ['evento.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_ciudadano_evento_id_evento_caso'), 'ciudadano_evento', ['id_evento_caso'], unique=True)
    op.create_table('departamento',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_departamento_indec', sa.Integer(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('id_provincia_indec', sa.Integer(), nullable=False),
    sa.Column('region_sanitaria', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('poblacion', sa.Integer(), nullable=True),
    sa.Column('superficie_km2', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['id_provincia_indec'], ['provincia.id_provincia_indec'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_departamento_id_departamento_indec'), 'departamento', ['id_departamento_indec'], unique=True)
    op.create_index(op.f('ix_departamento_nombre'), 'departamento', ['nombre'], unique=False)
    op.create_table('antecedentes_epidemiologicos_evento',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fecha_antecedente_epidemiologico', sa.Date(), nullable=True),
    sa.Column('id_ciudadano_evento', sa.Integer(), nullable=False),
    sa.Column('id_antecedente_epidemiologico', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_antecedente_epidemiologico'], ['antecedente_epidemiologico.id'], ),
    sa.ForeignKeyConstraint(['id_ciudadano_evento'], ['ciudadano_evento.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contactos_notificacion',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('hubo_contacto_con_caso_confirmado', sa.Boolean(), nullable=True),
    sa.Column('hubo_contacto_con_caso_sospechoso', sa.Boolean(), nullable=True),
    sa.Column('contactos_relevados_contactos_detectados', sqlmodel.sql.sqltypes.AutoString(length=32), nullable=True),
    sa.Column('cantidad_contactos_menores_un_anio', sa.Integer(), nullable=True),
    sa.Column('cantidad_contactos_vacunados', sa.Integer(), nullable=True),
    sa.Column('cantidad_contactos_embarazadas', sa.Integer(), nullable=True),
    sa.Column('id_ciudadano_evento', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_ciudadano_evento'], ['ciudadano_evento.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('detalle_evento_sintomas',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('semana_epidemiologica_aparicion_sintoma', sa.Integer(), nullable=True),
    sa.Column('fecha_inicio_sintoma', sa.Date(), nullable=True),
    sa.Column('anio_epidemiologico_sintoma', sa.Integer(), nullable=True),
    sa.Column('id_ciudadano_evento', sa.Integer(), nullable=False),
    sa.Column('id_sintoma', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_ciudadano_evento'], ['ciudadano_evento.id'], ),
    sa.ForeignKeyConstraint(['id_sintoma'], ['sintoma.id_snvs_signo_sintoma'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('establecimiento_evento',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_origen', sa.Integer(), nullable=True),
    sa.Column('establecimientos_que_intervienen', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('provincias_que_intervienen', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('regiones_sanitarias_que_intervienen', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('departamentos_que_intervienen', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('localidades_que_intervienen', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('id_ciudadano_evento', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_ciudadano_evento'], ['ciudadano_evento.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('estudio_evento',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fecha_estudio', sa.Date(), nullable=True),
    sa.Column('determinacion', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('tecnica', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('resultado', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('fecha_recepcion', sa.Date(), nullable=True),
    sa.Column('id_ciudadano_evento', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_ciudadano_evento'], ['ciudadano_evento.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('internacion_evento',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fue_internado', sa.Boolean(), nullable=True),
    sa.Column('fue_curado', sa.Boolean(), nullable=True),
    sa.Column('requirio_cuidado_intensivo', sa.Boolean(), nullable=True),
    sa.Column('fecha_internacion', sa.Date(), nullable=True),
    sa.Column('fecha_cuidados_intensivos', sa.Date(), nullable=True),
    sa.Column('establecimiento_internacion', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('fecha_alta_medica', sa.Date(), nullable=True),
    sa.Column('es_fallecido', sa.Boolean(), nullable=True),
    sa.Column('fecha_fallecimiento', sa.Date(), nullable=True),
    sa.Column('id_ciudadano_evento', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_ciudadano_evento'], ['ciudadano_evento.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('investigacion_evento',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('es_usuario_centinela', sa.Boolean(), nullable=True),
    sa.Column('es_evento_centinela', sa.Boolean(), nullable=True),
    sa.Column('id_usuario_registro', sa.Integer(), nullable=True),
    sa.Column('participo_usuario_centinela', sa.Boolean(), nullable=True),
    sa.Column('id_usuario_centinela_participante', sa.Integer(), nullable=True),
    sa.Column('es_investigacion_terreno', sa.Boolean(), nullable=True),
    sa.Column('fecha_investigacion', sa.Date(), nullable=True),
    sa.Column('tipo_y_lugar_investigacion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('origen_financiamiento', sa.Enum('PUBLICO', 'PRIVADO', 'MIXTO', name='origenfinanciamiento'), nullable=True),
    sa.Column('id_ciudadano_evento', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_ciudadano_evento'], ['ciudadano_evento.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('localidad',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_localidad_indec', sa.BigInteger(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('id_departamento_indec', sa.Integer(), nullable=False),
    sa.Column('poblacion', sa.Integer(), nullable=True),
    sa.Column('codigo_postal', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('latitud', sa.Float(), nullable=True),
    sa.Column('longitud', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['id_departamento_indec'], ['departamento.id_departamento_indec'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_localidad_id_localidad_indec'), 'localidad', ['id_localidad_indec'], unique=True)
    op.create_index(op.f('ix_localidad_nombre'), 'localidad', ['nombre'], unique=False)
    op.create_table('vacunas_ciudadano',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('dosis', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('fecha_aplicacion', sa.Date(), nullable=True),
    sa.Column('id_ciudadano_evento', sa.Integer(), nullable=False),
    sa.Column('id_vacuna', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_ciudadano_evento'], ['ciudadano_evento.id'], ),
    sa.ForeignKeyConstraint(['id_vacuna'], ['vacuna.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ambitos_concurrencia_ciudadano',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('codigo_ciudadano', sa.BigInteger(), nullable=False),
    sa.Column('id_localidad_ambito_ocurrencia', sa.BigInteger(), nullable=True),
    sa.Column('nombre_lugar_ocurrencia', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('tipo_lugar_ocurrencia', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('localidad_ambito_ocurrencia', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('fecha_ambito_ocurrencia', sa.Date(), nullable=True),
    sa.Column('frecuencia_concurrencia', sa.Enum('UNICA_VEZ', 'DIARIA', 'SEMANAL', 'MENSUAL', 'ANUAL', 'OCASIONAL', name='frecuenciaocurrencia'), nullable=True),
    sa.Column('es_sitio_probable_adquisicion_infeccion', sa.Boolean(), nullable=True),
    sa.Column('es_sitio_probable_diseminacion_infeccion', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['codigo_ciudadano'], ['ciudadano.codigo_ciudadano'], ),
    sa.ForeignKeyConstraint(['id_localidad_ambito_ocurrencia'], ['localidad.id_localidad_indec'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('ciudadano_domicilio',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('codigo_ciudadano', sa.BigInteger(), nullable=False),
    sa.Column('id_localidad_indec', sa.BigInteger(), nullable=False),
    sa.Column('calle_domicilio', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('numero_domicilio', sqlmodel.sql.sqltypes.AutoString(length=10), nullable=True),
    sa.Column('barrio_popular', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.ForeignKeyConstraint(['codigo_ciudadano'], ['ciudadano.codigo_ciudadano'], ),
    sa.ForeignKeyConstraint(['id_localidad_indec'], ['localidad.id_localidad_indec'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('establecimiento',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('id_localidad_establecimiento', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['id_localidad_establecimiento'], ['localidad.id_localidad_indec'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('viajes_ciudadano',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('id_snvs_viaje_epidemiologico', sa.Integer(), nullable=False),
    sa.Column('codigo_ciudadano', sa.BigInteger(), nullable=False),
    sa.Column('id_localidad_destino_viaje', sa.BigInteger(), nullable=True),
    sa.Column('fecha_inicio_viaje', sa.Date(), nullable=True),
    sa.Column('fecha_finalizacion_viaje', sa.Date(), nullable=True),
    sa.ForeignKeyConstraint(['codigo_ciudadano'], ['ciudadano.codigo_ciudadano'], ),
    sa.ForeignKeyConstraint(['id_localidad_destino_viaje'], ['localidad.id_localidad_indec'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_viajes_ciudadano_id_snvs_viaje_epidemiologico'), 'viajes_ciudadano', ['id_snvs_viaje_epidemiologico'], unique=True)
    op.create_table('diagnostico_evento',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clasificacion_manual', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=False),
    sa.Column('clasificacion_automatica', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('clasificacion_algoritmo', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('validacion', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('edad_diagnostico', sa.Integer(), nullable=True),
    sa.Column('grupo_etario', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('diagnostico_referido', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('fecha_diagnostico_referido', sa.Date(), nullable=True),
    sa.Column('id_ciudadano_evento', sa.Integer(), nullable=False),
    sa.Column('id_diagnostico', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_ciudadano_evento'], ['ciudadano_evento.id'], ),
    sa.ForeignKeyConstraint(['id_diagnostico'], ['establecimiento.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('muestra_evento',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('fecha_toma_muestra', sa.Date(), nullable=True),
    sa.Column('semana_epidemiologica_muestra', sa.Integer(), nullable=True),
    sa.Column('anio_epidemiologico_muestra', sa.Integer(), nullable=True),
    sa.Column('id_snvs_evento_muestra', sa.BigInteger(), nullable=True),
    sa.Column('id_snvs_prueba_muestra', sa.BigInteger(), nullable=True),
    sa.Column('valor', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('id_snvs_usuario_interpretacion', sa.Integer(), nullable=True),
    sa.Column('id_snvs_tipo_prueba', sa.Integer(), nullable=True),
    sa.Column('id_snvs_prueba', sa.Integer(), nullable=True),
    sa.Column('id_snvs_resultado', sa.Integer(), nullable=True),
    sa.Column('fecha_papel', sa.Date(), nullable=True),
    sa.Column('id_ciudadano_evento', sa.Integer(), nullable=False),
    sa.Column('id_establecimiento', sa.Integer(), nullable=False),
    sa.Column('id_muestra', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_ciudadano_evento'], ['ciudadano_evento.id'], ),
    sa.ForeignKeyConstraint(['id_establecimiento'], ['establecimiento.id'], ),
    sa.ForeignKeyConstraint(['id_muestra'], ['muestra.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tratamiento_evento',
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('establecimiento_tratamiento', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('descripcion_tratamiento', sqlmodel.sql.sqltypes.AutoString(length=150), nullable=True),
    sa.Column('fecha_inicio_tratamiento', sa.Date(), nullable=True),
    sa.Column('fecha_fin_tratamiento', sa.Date(), nullable=True),
    sa.Column('resultado_tratamiento', sa.Enum('PACIENTE_CURADO', 'PACIENTE_MEJORADO', 'SIN_CAMBIOS', 'PACIENTE_EMPEORADO', 'PACIENTE_FALLECIDO', 'ABANDONO_TRATAMIENTO', 'EN_TRATAMIENTO', name='resultadotratamiento'), nullable=True),
    sa.Column('id_ciudadano_evento', sa.Integer(), nullable=False),
    sa.Column('id_establecimiento_tratamiento', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id_ciudadano_evento'], ['ciudadano_evento.id'], ),
    sa.ForeignKeyConstraint(['id_establecimiento_tratamiento'], ['establecimiento.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('tratamiento_evento')
    op.drop_table('muestra_evento')
    op.drop_table('diagnostico_evento')
    op.drop_index(op.f('ix_viajes_ciudadano_id_snvs_viaje_epidemiologico'), table_name='viajes_ciudadano')
    op.drop_table('viajes_ciudadano')
    op.drop_table('establecimiento')
    op.drop_table('ciudadano_domicilio')
    op.drop_table('ambitos_concurrencia_ciudadano')
    op.drop_table('vacunas_ciudadano')
    op.drop_index(op.f('ix_localidad_nombre'), table_name='localidad')
    op.drop_index(op.f('ix_localidad_id_localidad_indec'), table_name='localidad')
    op.drop_table('localidad')
    op.drop_table('investigacion_evento')
    op.drop_table('internacion_evento')
    op.drop_table('estudio_evento')
    op.drop_table('establecimiento_evento')
    op.drop_table('detalle_evento_sintomas')
    op.drop_table('contactos_notificacion')
    op.drop_table('antecedentes_epidemiologicos_evento')
    op.drop_index(op.f('ix_departamento_nombre'), table_name='departamento')
    op.drop_index(op.f('ix_departamento_id_departamento_indec'), table_name='departamento')
    op.drop_table('departamento')
    op.drop_index(op.f('ix_ciudadano_evento_id_evento_caso'), table_name='ciudadano_evento')
    op.drop_table('ciudadano_evento')
    op.drop_table('ciudadano_datos')
    op.drop_table('ciudadano_comorbilidades')
    op.drop_table('vacuna')
    op.drop_index(op.f('ix_sintoma_id_snvs_signo_sintoma'), table_name='sintoma')
    op.drop_table('sintoma')
    op.drop_index(op.f('ix_provincia_nombre'), table_name='provincia')
    op.drop_index(op.f('ix_provincia_id_provincia_indec'), table_name='provincia')
    op.drop_table('provincia')
    op.drop_table('muestra')
    op.drop_table('evento')
    op.drop_index(op.f('ix_datamart_epidemiologia_resultado_final'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_region_sanitaria'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_id_localidad_indec'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_id_evento_caso'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_id_evento'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_grupo_evento'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_fue_internado'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_fecha_inicio_sintomas'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_fecha_apertura_caso'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_evolucion_final'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_dni_ciudadano'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_codigo_ciudadano'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_clasificacion_resumen'), table_name='datamart_epidemiologia')
    op.drop_index(op.f('ix_datamart_epidemiologia_anio_evento'), table_name='datamart_epidemiologia')
    op.drop_index('idx_datamart_semana_epi', table_name='datamart_epidemiologia')
    op.drop_index('idx_datamart_localidad_fecha', table_name='datamart_epidemiologia')
    op.drop_index('idx_datamart_fecha_evento', table_name='datamart_epidemiologia')
    op.drop_index('idx_datamart_evento_fecha', table_name='datamart_epidemiologia')
    op.drop_index('idx_datamart_clasificacion', table_name='datamart_epidemiologia')
    op.drop_table('datamart_epidemiologia')
    op.drop_table('comorbilidad')
    op.drop_index(op.f('ix_ciudadano_tipo_documento'), table_name='ciudadano')
    op.drop_index(op.f('ix_ciudadano_numero_documento'), table_name='ciudadano')
    op.drop_index(op.f('ix_ciudadano_nombre'), table_name='ciudadano')
    op.drop_index(op.f('ix_ciudadano_codigo_ciudadano'), table_name='ciudadano')
    op.drop_index(op.f('ix_ciudadano_apellido'), table_name='ciudadano')
    op.drop_table('ciudadano')
    op.drop_table('antecedente_epidemiologico')
    # ### end Alembic commands ###

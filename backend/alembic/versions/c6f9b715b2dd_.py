""".

Revision ID: c6f9b715b2dd
Revises: 41ac61527438
Create Date: 2025-10-01 17:10:32.597537

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel  # Always import sqlmodel for SQLModel types


# revision identifiers, used by Alembic.
revision: str = 'c6f9b715b2dd'
down_revision: Union[str, Sequence[str], None] = '41ac61527438'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('uq_ambito_evento', 'ambitos_concurrencia_evento', ['id_evento'])
    op.create_unique_constraint('uq_evento_antecedente', 'antecedentes_epidemiologicos_evento', ['id_evento', 'id_antecedente_epidemiologico'])
    op.create_unique_constraint('uq_contactos_evento', 'contactos_notificacion', ['id_evento'])
    op.create_unique_constraint('uq_evento_sintoma', 'detalle_evento_sintomas', ['id_evento', 'id_sintoma'])
    op.create_unique_constraint('uq_diagnostico_evento', 'diagnostico_evento', ['id_evento'])
    op.create_unique_constraint('uq_internacion_evento', 'internacion_evento', ['id_evento'])
    op.create_unique_constraint('uq_investigacion_evento', 'investigacion_evento', ['id_evento'])
    op.create_unique_constraint('uq_tratamiento_evento', 'tratamiento_evento', ['id_evento', 'descripcion_tratamiento', 'fecha_inicio_tratamiento'])
    op.create_unique_constraint('uq_vacuna_ciudadano', 'vacunas_ciudadano', ['codigo_ciudadano', 'id_vacuna', 'fecha_aplicacion', 'dosis'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uq_vacuna_ciudadano', 'vacunas_ciudadano', type_='unique')
    op.drop_constraint('uq_tratamiento_evento', 'tratamiento_evento', type_='unique')
    op.drop_constraint('uq_investigacion_evento', 'investigacion_evento', type_='unique')
    op.drop_constraint('uq_internacion_evento', 'internacion_evento', type_='unique')
    op.drop_constraint('uq_diagnostico_evento', 'diagnostico_evento', type_='unique')
    op.drop_constraint('uq_evento_sintoma', 'detalle_evento_sintomas', type_='unique')
    op.drop_constraint('uq_contactos_evento', 'contactos_notificacion', type_='unique')
    op.drop_constraint('uq_evento_antecedente', 'antecedentes_epidemiologicos_evento', type_='unique')
    op.drop_constraint('uq_ambito_evento', 'ambitos_concurrencia_evento', type_='unique')
    # ### end Alembic commands ###

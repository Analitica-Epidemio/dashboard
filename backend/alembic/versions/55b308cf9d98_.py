""".

Revision ID: 55b308cf9d98
Revises: 63764c59d17f
Create Date: 2025-09-09 13:46:43.242029

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel  # Always import sqlmodel for SQLModel types


# revision identifiers, used by Alembic.
revision: str = '55b308cf9d98'
down_revision: Union[str, Sequence[str], None] = '63764c59d17f'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('classification_rule', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('classification_rule', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('event_classification_audit', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('event_classification_audit', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('filter_condition', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('filter_condition', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('strategy_change_log', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('strategy_change_log', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('strategy_change_log', 'updated_at')
    op.drop_column('strategy_change_log', 'created_at')
    op.drop_column('filter_condition', 'updated_at')
    op.drop_column('filter_condition', 'created_at')
    op.drop_column('event_classification_audit', 'updated_at')
    op.drop_column('event_classification_audit', 'created_at')
    op.drop_column('classification_rule', 'updated_at')
    op.drop_column('classification_rule', 'created_at')
    # ### end Alembic commands ###

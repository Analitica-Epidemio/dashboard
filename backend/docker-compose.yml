# Docker Compose para desarrollo del Sistema de Epidemiología
# Incluye todos los servicios necesarios: API, PostgreSQL, Redis

version: '3.8'

services:
  # =============================================================================
  # Base de datos PostgreSQL
  # =============================================================================
  db:
    image: postgres:15-alpine
    container_name: epidemiologia_db
    environment:
      POSTGRES_DB: epidemiologia_db
      POSTGRES_USER: epidemiologia_user
      POSTGRES_PASSWORD: epidemiologia_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U epidemiologia_user -d epidemiologia_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - epidemiologia_network

  # =============================================================================
  # Redis para Celery
  # =============================================================================
  redis:
    image: redis:7-alpine
    container_name: epidemiologia_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - epidemiologia_network

  # =============================================================================
  # API Backend (FastAPI)
  # =============================================================================
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: epidemiologia_api
    environment:
      ENVIRONMENT: development
      DATABASE_URL: postgresql+asyncpg://epidemiologia_user:epidemiologia_password@db:5432/epidemiologia_db
      REDIS_URL: redis://redis:6379/0
      SECRET_KEY: development_secret_key_change_in_production
      CORS_ORIGINS: http://localhost:3000,http://127.0.0.1:3000
      ALLOWED_HOSTS: localhost,127.0.0.1,0.0.0.0
    ports:
      - "8000:8000"
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - epidemiologia_network

# =============================================================================
# Volúmenes persistentes
# =============================================================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

# =============================================================================
# Red privada para comunicación entre servicios
# =============================================================================
networks:
  epidemiologia_network:
    driver: bridge
/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v1/hello": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get Hello
         * @description Obtiene un saludo del servidor.
         *
         *     Implementación CORRECTA con mejores prácticas:
         *     - JSONResponse directo para control total del status code
         *     - 50% probabilidad de éxito para testing
         *     - Errores estructurados con códigos significativos
         *     - Sin excepciones, retorno directo
         */
        get: operations["get_hello_api_v1_hello_get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Api Root
         * @description Endpoint raíz de la API v1
         */
        get: operations["api_root_api_v1__get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /**
         * ErrorDetail
         * @description Detalle de un error específico.
         */
        ErrorDetail: {
            /**
             * Code
             * @description Código de error machine-readable
             */
            code: string;
            /**
             * Message
             * @description Mensaje human-readable
             */
            message: string;
            /**
             * Field
             * @description Campo que causó el error
             */
            field?: string | null;
        };
        /**
         * ErrorResponse
         * @description Respuesta de error estándar.
         *
         *     Se usa SOLO con códigos HTTP 4xx/5xx.
         *     Basado en Google JSON Style Guide.
         */
        ErrorResponse: {
            /** @description Detalle del error */
            error: components["schemas"]["ErrorDetail"];
            /**
             * Errors
             * @description Lista de errores adicionales (para validación múltiple)
             */
            errors?: components["schemas"]["ErrorDetail"][] | null;
            /**
             * Request Id
             * @description ID único para tracking
             */
            request_id?: string | null;
        };
        /**
         * HelloData
         * @description Datos del saludo.
         */
        HelloData: {
            /**
             * Message
             * @example Hello, World!
             */
            message: string;
            /**
             * Timestamp
             * Format: date-time
             * @example 2024-01-15T10:30:00Z
             */
            timestamp: string;
            /**
             * Server
             * @default epidemiologia-api
             * @example epidemiologia-api
             */
            server: string;
        };
        /** SuccessResponse[HelloData] */
        SuccessResponse_HelloData_: {
            /** @description Datos de la respuesta */
            data: components["schemas"]["HelloData"];
            /**
             * Meta
             * @description Metadata opcional (paginación, etc)
             */
            meta?: {
                [key: string]: unknown;
            } | null;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    get_hello_api_v1_hello_get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Saludo exitoso */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SuccessResponse_HelloData_"];
                };
            };
            /** @description Servicio temporalmente no disponible */
            503: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    /** @example {
                     *       "error": {
                     *         "code": "SERVICE_UNAVAILABLE",
                     *         "message": "El servicio de saludo está temporalmente no disponible"
                     *       },
                     *       "request_id": "550e8400-e29b-41d4-a716"
                     *     } */
                    "application/json": components["schemas"]["ErrorResponse"];
                };
            };
        };
    };
    api_root_api_v1__get: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: unknown;
                    };
                };
            };
        };
    };
}

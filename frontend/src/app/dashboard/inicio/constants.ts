
// Columnas esperadas en archivos epidemiológicos
export const REQUIRED_COLUMNS = ["CODIGO_CIUDADANO",
    "IDEVENTOCASO",
    "EVENTO",
    "NOMBRE",
    "APELLIDO",
    "SEXO",
    "TIPO_DOC",
    "NRO_DOC",
    "FECHA_NACIMIENTO",
    "EDAD_ACTUAL",
    "EDAD_DIAGNOSTICO",
    "GRUPO_ETARIO",
    "SEPI_APERTURA",
    "SEPI_SINTOMA",
    "SEPI_CONSULTA",
    "SEPI_MUESTRA",
    "IDPAISRESIDENCIA",
    "PAIS_RESIDENCIA",
    "ID_PROV_INDEC_RESIDENCIA",
    "PROVINCIA_RESIDENCIA",
    "ID_DEPTO_INDEC_RESIDENCIA",
    "DEPARTAMENTO_RESIDENCIA",
    "ID_LOC_INDEC_RESIDENCIA",
    "LOCALIDAD_RESIDENCIA",
    "CALLE_DOMICILIO",
    "NUMERO_DOMICILIO",
    "CLASIFICACION_MANUAL",
    "CLASIFICACION_AUTOMATICA",
    "FECHA_APERTURA",
    "PROVINCIA_INTERVIENEN",
    "REGION_SANITARIA_INTERVIENEN",
    "DEPARTAMENTO_INTERVIENEN",
    "LOCALIDAD_INTERVIENEN",
    "ESTABLECIMIENTOS_INTERVIENEN",
    "FECHA_CONSULTA",
    "ID_PROV_INDEC_CLINICA",
    "PROV_CLINICA",
    "ID_DEPTO_INDEC_CLINICA",
    "DEPTO_CLINICA",
    "ID_LOC_INDEC_CLINICA",
    "LOCA_CLINICA",
    "ID_ESTAB_CLINICA",
    "ESTAB_CLINICA",
    "SINTOMATICO",
    "FIS",
    "EMBARAZADA",
    "INTERNADO",
    "CURADO",
    "FECHA_INTERNACION",
    "CUIDADO_INTENSIVO",
    "FECHA_CUI_INTENSIVOS",
    "FECHA_ALTA_MEDICA",
    "FALLECIDO",
    "FECHA_FALLECIMIENTO",
    "MUESTRA",
    "ID_SNVS_EVENTO_MUESTRA",
    "FTM",
    "ID_ESTABLECIMIENTO_MUESTRA",
    "ESTABLECIMIENTO_MUESTRA",
    "ID_PROV_INDEC_MUESTRA",
    "PROVINCIA_MUESTRA",
    "ID_DEPTO_INDEC_MUESTRA",
    "DEPARTAMENTO_MUESTRA",
    "ID_LOC_INDEC_MUESTRA",
    "LOCALIDAD_MUESTRA",
    "ID_SNVS_PRUEBA_MUESTRA",
    "FECHA_ESTUDIO",
    "DETERMINACION",
    "TECNICA",
    "RESULTADO",
    "FECHA_RECEPCION",
    "ID_ESTABLECIMIENTO_DIAG",
    "ESTABLECIMIENTO_DIAG",
    "ID_PROV_INDEC_DIAG",
    "PROVINCIA_DIAG",
    "ID_DEPTO_INDEC_DIAG",
    "DEPARTAMENTO_DIAG",
    "ID_LOC_INDEC_DIAG",
    "LOCALIDAD_DIAG",
    "ID_SNVS_VIAJE_EPIDEMIO",
    "FECHA_INICIO_VIAJE",
    "FECHA_FIN_VIAJE",
    "ID_PAIS_VIAJE",
    "PAIS_VIAJE",
    "ID_PROV_INDEC_VIAJE",
    "PROV_VIAJE",
    "ID_LOC_INDEC_VIAJE",
    "LOC_VIAJE",
    "ID_SNVS_ANTECEDENTE_EPIDEMIO",
    "ANTECEDENTE_EPIDEMIOLOGICO",
    "ID_SNVS_VACUNA",
    "VACUNA",
    "DOSIS",
    "FECHA_APLICACION",
    "FECHA_INICIO_SINTOMA",
    "ID_SNVS_SIGNO_SINTOMA",
    "SIGNO_SINTOMA",
    "ESTAB_TTO",
    "TRATAMIENTO_2",
    "FECHA_INICIO_TRAT",
    "FECHA_FIN_TRAT",
    "RESULTADO_TRATAMIENTO",
    "GRUPO_EVENTO",
    "ID_ORIGEN",
    "ESTABLECIMIENTO_EPI",
    "ID_PROV_INDEC_EPI",
    "PROVINCIA_EPI",
    "ID_DEPTO_INDEC_EPI",
    "DEPARTAMENTO_EPI",
    "ID_LOC_INDEC_EPI",
    "LOCALIDAD_EPI",
    "ID_ESTABLECIMIENTO_CARGA",
    "ESTABLECIMIENTO_CARGA",
    "ID_PROV_INDEC_CARGA",
    "PROVINCIA_CARGA",
    "ID_DEPTO_INDEC_CARGA",
    "DEPARTAMENTO_CARGA",
    "ID_LOC_INDEC_CARGA",
    "LOCALIDAD_CARGA",
    "ID_SNVS_EVENTO",
    "USER_CENTINELA",
    "EVENTO_CENTINELA",
    "ID_USER_REGISTRO",
    "USER_CENT_PARTICIPO",
    "ID_USER_CENT_PARTICIPO",
    "TIPO_LUGAR_OCURRENCIA",
    "NOMBRE_LUGAR_OCURRENCIA",
    "LOCALIDAD_AMBITO_OCURRENCIA",
    "SITIO_PROBABLE_ADQUISICION",
    "SITIO_PROBABLE_DISEMINACION",
    "FRECUENCIA",
    "FECHA_AMBITO_OCURRENCIA",
    "FECHA_ANTECEDENTE_EPI",
    "INVESTIGACION_TERRENO",
    "FECHA_INVESTIGACION",
    "TIPO_Y_LUGAR_INVESTIGACION",
    "CONTACTO_CON_CONFIR",
    "CONTACTO_CON_SOSPECHOSO",
    "CONTACTOS_RELEVADOS_CONTACTOS_DETECTADOS",
    "CONTACTOS_MENORES_1",
    "CONTACTO_EMBARAZADAS",
    "CONTACTOS_VACUNADOS",
    "OBSERVACIONES",
    "COMORBILIDAD",
    "DIAG_REFERIDO",
    "FECHA_DIAG_REFERIDO",
    "REGION_SANITARIA_MUESTRA",
    "REGION_SANITARIA_CLINICA",
    "REGION_SANITARIA_CARGA",
    "ANIO_EPI_APERTURA",
    "ANIO_EPI_SINTOMA",
    "ANIO_EPI_CONSULTA",
    "ANIO_EPI_MUESTRA",
    "ID_PROVINCIA_RESIDENCIA",
    "ID_PROVINCIA_CLINICA",
    "ID_PROVINCIA_MUESTRA",
    "ID_PROVINCIA_VIAJE",
    "ID_PROVINCIA_CARGA",
    "ESTABLECIMIENTO_INTERNACION",
    "OCUPACION",
    "VALIDACION",
    "INFO_CONTACTO",
    "CLASIFICACION_ALGORITMO",
    "EDAD_APERTURA",
    "COBERTURA_SOCIAL",
    "VALOR",
    "ORIGEN_FINANCIAMIENTO",
    "SE_DECLARA_PUEBLO_INDIGENA",
    "ETNIA",
    "ID_SNVS_INTERPRET_USR",
    "ID_SNVS_MUESTRA",
    "ID_SNVS_TIPO_PRUEBA",
    "ID_SNVS_PRUEBA",
    "ID_SNVS_RESULTADO",
    "GENERO",
    "SEXO_AL_NACER",
    "FECHA_PAPEL",
    "BARRIO_POPULAR",
    "SEM_MIN",
    "AÑO_MIN"];

/**
 * Valida si una hoja tiene TODAS las columnas requeridas
 */
export function validateSheetColumns(sheetColumns: string[]): {
    isValid: boolean;
    missingColumns: string[];
    matchPercentage: number;
} {
    const normalizedSheetColumns = sheetColumns.map(col =>
        String(col || "").trim().toUpperCase()
    );

    const missingColumns = REQUIRED_COLUMNS.filter(requiredCol =>
        !normalizedSheetColumns.includes(requiredCol.toUpperCase())
    );

    const matchedColumns = REQUIRED_COLUMNS.filter(requiredCol =>
        normalizedSheetColumns.includes(requiredCol.toUpperCase())
    );

    const matchPercentage = Math.round(
        (matchedColumns.length / REQUIRED_COLUMNS.length) * 100
    );

    return {
        isValid: missingColumns.length === 0,
        missingColumns,
        matchPercentage
    };
}

/**
 * Obtiene un mensaje descriptivo del estado de validación
 */
export function getValidationMessage(validation: ReturnType<typeof validateSheetColumns>): string {
    if (validation.isValid) {
        return "✅ Hoja válida - Contiene todas las columnas requeridas";
    }

    return `❌ Faltan ${validation.missingColumns.length} de ${REQUIRED_COLUMNS.length} columnas requeridas (${validation.matchPercentage}% coincidencia)`;
}